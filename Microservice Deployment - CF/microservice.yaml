# Should be stored in an S3 bucket. Use the URL to this
# S3 bucket in the cluster.yaml file.

AWSTemplateFormatVersion: 2010-09-09
Description: "In S3 | ECS Cluster and Microservices"

Parameters:
  ServiceName:
    Description: Name of the microservice
    Type: String
  ContainerName:
    Description: Name of the container
    Type: String
  ContainerPort:
    Description: Port for the container
    Type: Number
  Cluster:
    Description: Cluster to store service
    Type: String
  TaskExecutionRole:
    Description: Task Execution Role
    Type: String
  ContainerExecutionRole:
    Description: Container Execution Role
    Type: String
  Priority:
    Description: Priority for Listener Rule
    Type: Number
  
Resources:

  # Microservice
  Microservice:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: !Ref ServiceName
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 300
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - !ImportValue PrivateSubnet1
            - !ImportValue PrivateSubnet2
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup

  # Target Group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: '/actuator/health'
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 5
      Name: !Sub '${ContainerName}-tg'
      Protocol: HTTP
      Port: !Ref ContainerPort
      TargetType: ip
      VpcId: !ImportValue VPC

  # Listener Rule
  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Conditions:
        - Field: path-pattern
          Values:
            - !Sub '/${ContainerName}/**'
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      ListenerArn: !ImportValue Listener
      Priority: !Ref Priority

  # Fargate Task Definition for Service
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref TaskExecutionRole
      ExecutionRoleArn: !Ref ContainerExecutionRole
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub '{{resolve:secretsmanager:image-url:SecretString:image-url}}/${ContainerName}'
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Essential: true
      NetworkMode: awsvpc